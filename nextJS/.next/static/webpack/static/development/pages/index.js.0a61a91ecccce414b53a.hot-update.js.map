{"version":3,"file":"static/webpack/static/development/pages/index.js.0a61a91ecccce414b53a.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport Layout  from '../components/Layout';\nimport Link from 'next/link';\nimport '../styles/main.scss';\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\nimport en from '../i18n/locales/en.json';\nimport ru from '../i18n/locales/ru.json';\n\nimport ruLocaleData from 'react-intl/locale-data/ru';\nimport enLocaleData from 'react-intl/locale-data/en';\n\nimport { flattenMessages } from '../i18n/utils';\n\ninterface IPostLink {\n  id: string;\n  title: string;\n}\n\nconst PostLink = ( {id, title}:IPostLink ) => (\n  <li>\n    <Link as={`/p/${id}`} href={`/post?title=${title}`}>\n      <a> {title}</a>\n    </Link>\n  </li>\n)\n\nexport class Index extends React.Component {\n  state = {\n    lang: 'en'\n  };\n\n  togglLocale = (e: any) => {\n    this.setState({ lang: e.target.value });\n  };\n  \n  render(){\n    let { lang } = this.state;\n    const messages: { [key: string]: object} = {\n      'en': en,\n      'ru': ru\n    };\n    addLocaleData([...ruLocaleData, ...enLocaleData]);\n    return (\n      <IntlProvider locale={lang} messages={flattenMessages(messages[lang])}>\n        <Layout>\n        <button onClick={this.togglLocale} value='ru'>Русский</button>\n        <button onClick={this.togglLocale} value='en'>English</button>\n          <h1>\n            <FormattedMessage id='title'/>\n          </h1>\n          <ul>\n            {en.posts.map((post, index) => {\n              return <PostLink id={post.id} key={index} title={post.title} />\n            })}\n          </ul>\n        </Layout>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAhCA;AACA;AADA;AAAA;AAmCA;;;;A","sourceRoot":""}