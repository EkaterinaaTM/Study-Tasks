{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ekaterinamihajlina/Downloads/study projects/nextJS/pages/index.tsx\";\nimport { React } from 'react';\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport '../styles/main.scss';\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\nimport en from '../i18n/locales/en.json';\nimport ru from '../i18n/locales/ru.json';\nimport ruLocaleData from 'react-intl/locale-data/ru';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport { flattenMessages } from '../i18n/utils';\n\nvar PostLink = function PostLink(_ref) {\n  var id = _ref.id,\n      title = _ref.title;\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    as: \"/p/\".concat(id),\n    href: \"/post?title=\".concat(title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", title)));\n};\n\nexport var Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      lang: 'en'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglLocale\", function (e) {\n      _this.setState({\n        lang: e.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var lang = this.state.lang;\n      var messages = {\n        'en': en,\n        'ru': ru\n      };\n      addLocaleData([].concat(_toConsumableArray(ruLocaleData), _toConsumableArray(enLocaleData)));\n      return (// messages={flattenMessages(messages[lang])}\n        React.createElement(IntlProvider, {\n          locale: lang,\n          messages: flattenMessages(messages[lang]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.togglLocale,\n          value: \"ru\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"), React.createElement(\"button\", {\n          onClick: this.togglLocale,\n          value: \"en\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"English\"), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(FormattedMessage, {\n          id: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        })), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, en.posts.map(function (post, index) {\n          return React.createElement(PostLink, {\n            id: post.id,\n            key: index,\n            title: post.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        }))))\n      );\n    }\n  }]);\n\n  return Index;\n}(React.Component);\nexport default Index; // 2. как props\n// const indexPageContent = <p>Hello Next.js</p>;\n// export default function Index() {\n//   return <Layout content={indexPageContent} />;\n// }\n// 3. как HOC\n// const Page = () => <p>Hello Next.js</p>;\n// export default withLayout(Page);","map":{"version":3,"sources":["/Users/ekaterinamihajlina/Downloads/study projects/nextJS/pages/index.tsx"],"names":["React","Layout","Link","IntlProvider","FormattedMessage","addLocaleData","en","ru","ruLocaleData","enLocaleData","flattenMessages","PostLink","id","title","Index","lang","e","setState","target","value","state","messages","togglLocale","posts","map","post","index","Component"],"mappings":";;;;;;;;;AAAA,SAAQA,KAAR,QAAoB,OAApB;AACA,OAAOC,MAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,qBAAP;AACA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA8D,YAA9D;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,EAAP,MAAe,yBAAf;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,SAASC,eAAT,QAAgC,eAAhC;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,KAAP,QAAOA,KAAP;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,eAAQD,EAAR,CAAR;AAAsB,IAAA,IAAI,wBAAiBC,KAAjB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKA,KAAL,CADF,CADF,CADe;AAAA,CAAjB;;AAQA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACU;AACNC,MAAAA,IAAI,EAAE;AADA,KADV;;AAAA,kEAKgB,UAACC,CAAD,EAAO;AACnB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD,KAPH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BASU;AAAA,UACAJ,IADA,GACS,KAAKK,KADd,CACAL,IADA;AAEN,UAAMM,QAAQ,GAAG;AACf,cAAMf,EADS;AAEf,cAAMC;AAFS,OAAjB;AAIAF,MAAAA,aAAa,8BAAKG,YAAL,sBAAsBC,YAAtB,GAAb;AACA,aACE;AACA,4BAAC,YAAD;AAAc,UAAA,MAAM,EAAEM,IAAtB;AAA4B,UAAA,QAAQ,EAAEL,eAAe,CAACW,QAAQ,CAACN,IAAD,CAAT,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAQ,UAAA,OAAO,EAAE,KAAKO,WAAtB;AAAmC,UAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADA,EAEA;AAAQ,UAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,UAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,gBAAD;AAAkB,UAAA,EAAE,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGhB,EAAE,CAACiB,KAAH,CAASC,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,iBAAO,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAED,IAAI,CAACb,EAAnB;AAAuB,YAAA,GAAG,EAAEc,KAA5B;AAAmC,YAAA,KAAK,EAAED,IAAI,CAACZ,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFA,CADH,CANF,CADF;AAFF;AAiBD;AAjCH;;AAAA;AAAA,EAA2Bb,KAAK,CAAC2B,SAAjC;AAoCA,eAAeb,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import {React} from 'react';\nimport Layout  from '../components/Layout';\nimport Link from 'next/link';\nimport '../styles/main.scss';\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\nimport en from '../i18n/locales/en.json';\nimport ru from '../i18n/locales/ru.json';\n\nimport ruLocaleData from 'react-intl/locale-data/ru';\nimport enLocaleData from 'react-intl/locale-data/en';\n\nimport { flattenMessages } from '../i18n/utils';\n\ninterface PostLink {\n  id: string;\n  title: string;\n}\n\nconst PostLink = ( {id, title} ): PostLink => (\n  <li>\n    <Link as={`/p/${id}`} href={`/post?title=${title}`}>\n      <a> {title}</a>\n    </Link>\n  </li>\n)\n\nexport class Index extends React.Component {\n  state = {\n    lang: 'en'\n  };\n\n  togglLocale = (e) => {\n    this.setState({ lang: e.target.value });\n  };\n  \n  render(){\n    let { lang } = this.state;\n    const messages = {\n      'en': en,\n      'ru': ru\n    };\n    addLocaleData([...ruLocaleData, ...enLocaleData]);\n    return (\n      // messages={flattenMessages(messages[lang])}\n      <IntlProvider locale={lang} messages={flattenMessages(messages[lang])}>\n        <Layout>\n        <button onClick={this.togglLocale} value='ru'>Русский</button>\n        <button onClick={this.togglLocale} value='en'>English</button>\n          <h1>\n            <FormattedMessage id='title'/>\n          </h1>\n          <ul>\n            {en.posts.map((post, index) => {\n              return <PostLink id={post.id} key={index} title={post.title} />\n            })}\n          </ul>\n        </Layout>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default Index;\n\n// 2. как props\n// const indexPageContent = <p>Hello Next.js</p>;\n// export default function Index() {\n//   return <Layout content={indexPageContent} />;\n// }\n\n// 3. как HOC\n// const Page = () => <p>Hello Next.js</p>;\n// export default withLayout(Page);"]},"metadata":{},"sourceType":"module"}