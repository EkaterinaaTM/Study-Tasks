{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ekaterinamihajlina/Downloads/study projects/Next/nextJS/components/Header.tsx\";\n// import Link from 'next/link';\n// import { IntlProvider, FormattedMessage } from 'react-intl';\n// const linkStyle = {\n//     marginRight: 15\n// };\n// const Header: React.FC = () => ( \n//     <IntlProvider>\n//     <header>\n//         <Link href='/'>\n//             <a style={linkStyle}> <FormattedMessage id='home'/>  </a>\n//         </Link>\n//         <Link href='/about'>\n//             <a style={linkStyle}> <FormattedMessage id='about'/></a>\n//       </Link>\n//     </header>\n//     </IntlProvider>\n// );\n// export default Header;\nimport Link from 'next/link';\nimport React from 'react';\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\nimport en from '../i18n/locales/en.json';\nimport ru from '../i18n/locales/ru.json';\nimport ruLocaleData from 'react-intl/locale-data/ru';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport { flattenMessages } from '../i18n/utils';\nvar linkStyle = {\n  marginRight: 15\n};\nexport var Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      lang: 'en'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglLocale\", function (e) {\n      _this.setState({\n        lang: e.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var lang = this.state.lang;\n      var messages = {\n        'en': en,\n        'ru': ru\n      };\n      addLocaleData([].concat(_toConsumableArray(ruLocaleData), _toConsumableArray(enLocaleData)));\n      return React.createElement(IntlProvider, {\n        locale: lang,\n        messages: flattenMessages(messages[lang]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: linkStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), \"  \")), React.createElement(Link, {\n        href: \"/about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        style: linkStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.togglLocale,\n        value: \"ru\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"), React.createElement(\"button\", {\n        onClick: this.togglLocale,\n        value: \"en\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"English\")));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\nexport default Header;","map":{"version":3,"sources":["/Users/ekaterinamihajlina/Downloads/study projects/Next/nextJS/components/Header.tsx"],"names":["Link","React","IntlProvider","FormattedMessage","addLocaleData","en","ru","ruLocaleData","enLocaleData","flattenMessages","linkStyle","marginRight","Header","lang","e","setState","target","value","state","messages","togglLocale","Component"],"mappings":";;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA8D,YAA9D;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,EAAP,MAAe,yBAAf;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE;AADC,CAAlB;AAIA,WAAaC,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACU;AACNC,MAAAA,IAAI,EAAE;AADA,KADV;;AAAA,kEAKgB,UAACC,CAAD,EAAY;AACxB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD,KAPH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BASU;AAAA,UACAJ,IADA,GACS,KAAKK,KADd,CACAL,IADA;AAEN,UAAMM,QAAkC,GAAG;AACzC,cAAMd,EADmC;AAEzC,cAAMC;AAFmC,OAA3C;AAIAF,MAAAA,aAAa,8BAAKG,YAAL,sBAAsBC,YAAtB,GAAb;AACA,aACE,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEK,IAAtB;AAA4B,QAAA,QAAQ,EAAEJ,eAAe,CAACU,QAAQ,CAACN,IAAD,CAAT,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAEH,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsB,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,OADJ,CADA,EAIA,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAEA,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsB,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,CADJ,CAJA,EAOF;AAAQ,QAAA,OAAO,EAAE,KAAKU,WAAtB;AAAmC,QAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAPE,EAQA;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARA,CADF,CADF;AAeD;AA/BH;;AAAA;AAAA,EAA4BnB,KAAK,CAACoB,SAAlC;AAkCA,eAAeT,MAAf","sourcesContent":["// import Link from 'next/link';\n// import { IntlProvider, FormattedMessage } from 'react-intl';\n\n// const linkStyle = {\n//     marginRight: 15\n// };\n\n// const Header: React.FC = () => ( \n//     <IntlProvider>\n//     <header>\n//         <Link href='/'>\n//             <a style={linkStyle}> <FormattedMessage id='home'/>  </a>\n//         </Link>\n//         <Link href='/about'>\n//             <a style={linkStyle}> <FormattedMessage id='about'/></a>\n//       </Link>\n//     </header>\n//     </IntlProvider>\n// );\n\n// export default Header;\n\nimport Link from 'next/link';\nimport React from 'react';\nimport { IntlProvider, FormattedMessage, addLocaleData } from 'react-intl';\nimport en from '../i18n/locales/en.json';\nimport ru from '../i18n/locales/ru.json';\n\nimport ruLocaleData from 'react-intl/locale-data/ru';\nimport enLocaleData from 'react-intl/locale-data/en';\n\nimport { flattenMessages } from '../i18n/utils';\n\nconst linkStyle = {\n    marginRight: 15\n};\n\nexport class Header extends React.Component {\n  state = {\n    lang: 'en'\n  };\n\n  togglLocale = (e: any) => {\n    this.setState({ lang: e.target.value });\n  };\n  \n  render(){\n    let { lang } = this.state;\n    const messages: { [key: string]: object} = {\n      'en': en,\n      'ru': ru\n    };\n    addLocaleData([...ruLocaleData, ...enLocaleData]);\n    return (\n      <IntlProvider locale={lang} messages={flattenMessages(messages[lang])}>\n        <header>\n        <Link href='/'>\n            <a style={linkStyle}> <FormattedMessage id='home'/>  </a>\n        </Link>\n        <Link href='/about'>\n            <a style={linkStyle}> <FormattedMessage id='about'/></a>\n      </Link>\n      <button onClick={this.togglLocale} value='ru'>Русский</button>\n        <button onClick={this.togglLocale} value='en'>English</button>\n         \n    </header>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}