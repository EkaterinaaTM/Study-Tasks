{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ekaterinamihajlina/Downloads/study projects/Next/nextJS/pages/index.tsx\";\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport '../styles/main.scss';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en from '../i18n/locales/en.json';\naddLocaleData; // import ruLocaleData from 'react-intl/locale-data/ru';\n// import enLocaleData from 'react-intl/locale-data/en';\n// import { flattenMessages } from '../i18n/utils';\n\nvar PostLink = function PostLink(_ref) {\n  var id = _ref.id,\n      title = _ref.title;\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    as: \"/p/\".concat(id),\n    href: \"/post?title=\".concat(title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", title)));\n};\n\nexport var Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    // state = {\n    //   lang: 'en'\n    // };\n    // togglLocale = (e: any) => {\n    //   this.setState({ lang: e.target.value });\n    // };\n    value: function render() {\n      // let { lang } = this.state;\n      // const messages: { [key: string]: object} = {\n      //   'en': en,\n      //   'ru': ru\n      // };\n      // addLocaleData([...ruLocaleData, ...enLocaleData]);\n      return React.createElement(IntlProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, en.posts.map(function (post) {\n        return React.createElement(PostLink, {\n          id: post.id,\n          key: post.id,\n          title: post.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\nexport default Index;","map":{"version":3,"sources":["/Users/ekaterinamihajlina/Downloads/study projects/Next/nextJS/pages/index.tsx"],"names":["React","Layout","Link","IntlProvider","FormattedMessage","en","addLocaleData","PostLink","id","title","Index","posts","map","post","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,qBAAP;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,EAAP,MAAe,yBAAf;AAC0CC,aAAa,C,CAEvD;AACA;AAEA;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,KAAP,QAAOA,KAAP;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,eAAQD,EAAR,CAAR;AAAsB,IAAA,IAAI,wBAAiBC,KAAjB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKA,KAAL,CADF,CADF,CADe;AAAA,CAAjB;;AAQA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACE;AACA;AACA;AAEA;AACA;AACA;AAPF,6BASU;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,EAAE,CAACM,KAAH,CAASC,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAEA,IAAI,CAACL,EAAnB;AAAuB,UAAA,GAAG,EAAEK,IAAI,CAACL,EAAjC;AAAqC,UAAA,KAAK,EAAEK,IAAI,CAACJ,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFA,CADH,CANF,CADF,CADF;AAgBD;AAhCH;;AAAA;AAAA,EAA2BT,KAAK,CAACc,SAAjC;AAmCA,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport Layout  from '../components/Layout';\nimport Link from 'next/link';\nimport '../styles/main.scss';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en from '../i18n/locales/en.json';\nimport ru from '../i18n/locales/ru.json'; addLocaleData\n\n// import ruLocaleData from 'react-intl/locale-data/ru';\n// import enLocaleData from 'react-intl/locale-data/en';\n\n// import { flattenMessages } from '../i18n/utils';\n\ninterface IPostLink {\n  id: string;\n  title: string;\n}\n\nconst PostLink = ( {id, title}:IPostLink ) => (\n  <li>\n    <Link as={`/p/${id}`} href={`/post?title=${title}`}>\n      <a> {title}</a>\n    </Link>\n  </li>\n)\n\nexport class Index extends React.Component {\n  // state = {\n  //   lang: 'en'\n  // };\n\n  // togglLocale = (e: any) => {\n  //   this.setState({ lang: e.target.value });\n  // };\n  \n  render(){\n    // let { lang } = this.state;\n    // const messages: { [key: string]: object} = {\n    //   'en': en,\n    //   'ru': ru\n    // };\n    // addLocaleData([...ruLocaleData, ...enLocaleData]);\n    return (\n      <IntlProvider>\n        <Layout>\n        {/* <button onClick={this.togglLocale} value='ru'>Русский</button>\n        <button onClick={this.togglLocale} value='en'>English</button> */}\n          <h1>\n            <FormattedMessage id='title'/>\n          </h1>\n          <ul>\n            {en.posts.map((post) => {\n              return <PostLink id={post.id} key={post.id} title={post.title} />\n            })}\n          </ul>\n        </Layout>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}